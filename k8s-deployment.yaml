apiVersion: v1
kind: Namespace
metadata:
  name: employee-details
  labels:
    name: employee-details
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: employee-details
  namespace: employee-details
  labels:
    app: employee-details
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: employee-details
  template:
    metadata:
      labels:
        app: employee-details
        version: v1.0.0
    spec:
      containers:
      - name: employee-details
        image: employee-details:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        env:
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: employee-details-secret
              key: secret-key
        - name: DEBUG
          value: "False"
        - name: ALLOWED_HOSTS
          value: "*"
        - name: DATABASE_URL
          value: "sqlite:///app/db.sqlite3"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/users/
            port: 8000
            httpHeaders:
            - name: Host
              value: localhost
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /api/users/
            port: 8000
            httpHeaders:
            - name: Host
              value: localhost
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        volumeMounts:
        - name: data-volume
          mountPath: /app/db.sqlite3
          subPath: db.sqlite3
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: employee-details-pvc
      restartPolicy: Always
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: employee-details-pvc
  namespace: employee-details
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard
---
apiVersion: v1
kind: Service
metadata:
  name: employee-details-service
  namespace: employee-details
  labels:
    app: employee-details
spec:
  type: NodePort
  selector:
    app: employee-details
  ports:
  - name: http
    port: 8000
    targetPort: 8000
    nodePort: 30080
    protocol: TCP
  sessionAffinity: None
---
apiVersion: v1
kind: Secret
metadata:
  name: employee-details-secret
  namespace: employee-details
type: Opaque
data:
  secret-key: ZGphbmdvLWluc2VjdXJlLXlvdXItc2VjcmV0LWtleS1oZXJlLWNoYW5nZS1pbi1wcm9kdWN0aW9u
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: employee-details-ingress
  namespace: employee-details
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: employee-details.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: employee-details-service
            port:
              number: 8000 